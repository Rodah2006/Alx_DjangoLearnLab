"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g%%z)o6t0@=k$f$-9xkuma^rc@n5vl$)loa1(%9^4ses)gc755'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'csp', 
   
 ]

AUTH_USER_MODEL = 'bookshelf.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'csp.middleware.CSPMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# SECURITY SETTINGS

DEBUG = False  # Make sure this is set only in production
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# Prevent content sniffing
SECURE_CONTENT_TYPE_NOSNIFF = True

# Enable browser XSS filter
SECURE_BROWSER_XSS_FILTER = True

# Prevent the site from being embedded in iframes (clickjacking protection)
X_FRAME_OPTIONS = 'DENY'

# CSRF & Session cookies should be secure (sent over HTTPS only)
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True


CONTENT_SECURITY_POLICY = {
    'DIRECTIVES': {
        'default-src': ("'self'",),
        'font-src': ("'self'", 'fonts.gstatic.com'),
        'img-src': ("'self'", 'data:'),
        'script-src': ("'self'",),
        'style-src': ("'self'", 'fonts.googleapis.com'),
    }
}



# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False  # Disables detailed error pages in production

# Restrict allowed hosts
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# Prevent clickjacking attacks
X_FRAME_OPTIONS = 'DENY'  # Prevents rendering inside iframes

# Secure session and CSRF cookies
SESSION_COOKIE_SECURE = True  # Ensures cookies are only sent over HTTPS
CSRF_COOKIE_SECURE = True  # Ensures CSRF token is only sent over HTTPS
SECURE_BROWSER_XSS_FILTER = True  # Enables XSS filtering in browsers
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents MIME-sniffing


# ------------------------------
# SECURITY SETTINGS
# ------------------------------

# Redirect all HTTP requests to HTTPS
SECURE_SSL_REDIRECT = True  # üö® Important in production!

# HTTP Strict Transport Security (HSTS)
SECURE_HSTS_SECONDS = 31536000  # One year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True


# Cookies should only be sent via HTTPS
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Prevent your site from being framed (clickjacking protection)
X_FRAME_OPTIONS = 'DENY'

# Prevent content type sniffing
SECURE_CONTENT_TYPE_NOSNIFF = True

# Enable the browser‚Äôs XSS filter
SECURE_BROWSER_XSS_FILTER = True


# üîê Redirect all HTTP traffic to HTTPS
SECURE_SSL_REDIRECT = True

# üîê Instruct browser to use HTTPS only (HSTS)
SECURE_HSTS_SECONDS = 31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True


## HTTPS Deployment Notes

In production, the application must be served over HTTPS.
This involves:
- Setting up SSL/TLS certificates (e.g., via Let‚Äôs Encrypt)
- Configuring the web server (e.g., Nginx) with SSL
- Enabling Django settings: SECURE_SSL_REDIRECT, CSRF_COOKIE_SECURE, etc.


# Use this when behind a proxy like Nginx or Heroku
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
